/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.asgteach.newpizza;

import com.asgteach.newpizza.PizzaOrder.PizzaSize;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JCheckBox;
import javax.swing.JPanel;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import org.openide.util.NbBundle;

public final class ConfirmOrderVisual extends JPanel {

    public static final String PROP_CONFIRM_ORDER = "confirmOrder";

    /**
     * Creates new form ConfirmOrderVisual
     */
    public ConfirmOrderVisual() {
        initComponents();
        confirmCheckBox.addChangeListener(new ChangeListener() {

            @Override
            public void stateChanged(ChangeEvent ce) {
                if (ce.getSource() == confirmCheckBox) {
                    firePropertyChange(PROP_CONFIRM_ORDER, 0, 1);
                }
            }
        });
    }

    @NbBundle.Messages({"CTL_Panel5Name=Order Confirmation"})
    @Override
    public String getName() {
        return Bundle.CTL_Panel5Name();
    }

    public boolean confirmOrder() {
        return confirmCheckBox.isSelected();
    }

    public JCheckBox getConfirmCheckBox() {
        return confirmCheckBox;
    }

    public void setForm(PizzaOrder p) {
        orderNumberLabel.setText(p.getOrderNum() + "");
        totalLabel.setText("$ " + p.getTotal());
        SimpleDateFormat format = new SimpleDateFormat("hh:mm");
        pickupTimeLabel.setText(format.format(new Date()));
        StringBuilder sb = new StringBuilder();
        if (p.getPizzaSize() == PizzaSize.LARGE) {
            sb.append("Large");
        } else if (p.getPizzaSize() == PizzaSize.MEDIUM) {
            sb.append("Medium");
        } else if (p.getPizzaSize() == PizzaSize.SMALL) {
            sb.append("Small");
        }
        sb.append(" Pizza");
        if (!p.getToppings().isEmpty()) {
            sb.append(" with ");
            for (String topping : p.getToppings()) {
                sb.append(topping).append(", ");
            }
        }
        if (p.isPickup()) {
            sb.append(" For Pickup");
        } else {
            sb.append(" For Delivery");
        }
        orderSummaryLabel.setText(sb.toString());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        orderNumberLabel = new javax.swing.JLabel();
        pickupTimeLabel = new javax.swing.JLabel();
        totalLabel = new javax.swing.JLabel();
        confirmCheckBox = new javax.swing.JCheckBox();
        orderSummaryLabel = new javax.swing.JLabel();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(ConfirmOrderVisual.class, "ConfirmOrderVisual.jLabel1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(ConfirmOrderVisual.class, "ConfirmOrderVisual.jLabel2.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(ConfirmOrderVisual.class, "ConfirmOrderVisual.jLabel3.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(orderNumberLabel, org.openide.util.NbBundle.getMessage(ConfirmOrderVisual.class, "ConfirmOrderVisual.orderNumberLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(pickupTimeLabel, org.openide.util.NbBundle.getMessage(ConfirmOrderVisual.class, "ConfirmOrderVisual.pickupTimeLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(totalLabel, org.openide.util.NbBundle.getMessage(ConfirmOrderVisual.class, "ConfirmOrderVisual.totalLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(confirmCheckBox, org.openide.util.NbBundle.getMessage(ConfirmOrderVisual.class, "ConfirmOrderVisual.confirmCheckBox.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(orderSummaryLabel, org.openide.util.NbBundle.getMessage(ConfirmOrderVisual.class, "ConfirmOrderVisual.orderSummaryLabel.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(confirmCheckBox)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(orderNumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pickupTimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(totalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(orderSummaryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel1)
                    .addComponent(orderNumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel2)
                    .addComponent(pickupTimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel3)
                    .addComponent(totalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(orderSummaryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(confirmCheckBox)
                .addContainerGap(103, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox confirmCheckBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel orderNumberLabel;
    private javax.swing.JLabel orderSummaryLabel;
    private javax.swing.JLabel pickupTimeLabel;
    private javax.swing.JLabel totalLabel;
    // End of variables declaration//GEN-END:variables
}
